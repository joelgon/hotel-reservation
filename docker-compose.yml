version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"  # Porta principal de acesso a todos os serviços
      - "4571:4571"  # Porta adicional, usada em alguns serviços
    environment:
      - SERVICES=s3,sqs,lambda   # Define os serviços que você quer simular
      - AWS_DEFAULT_REGION=us-east-1  # Define a região padrão
      - LAMBDA_EXECUTOR=docker-reuse  # Define o executor para as Lambdas
      - DEBUG=1  # Habilita o modo de debug para mais detalhes no log
    volumes:
      - "./localstack:/var/lib/localstack"  # Persistência de dados local
      - "/var/run/docker.sock:/var/run/docker.sock"  # Necessário para Lambda com executor Docker

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"  # Porta para acessar o MongoDB
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root  # Usuário root inicial
      - MONGO_INITDB_ROOT_PASSWORD=example  # Senha para o usuário root
    volumes:
      - mongo_data:/data/db  # Persistência de dados

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"  # Porta para acessar o Mongo Express no navegador
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root  # Usuário admin do MongoDB
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example  # Senha do usuário admin
      - ME_CONFIG_MONGODB_SERVER=mongo  # Nome do serviço MongoDB (como está no Docker Compose)
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress  # Usuário para autenticação básica HTTP
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress  # Senha para autenticação básica HTTP
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true  # Habilita o modo admin no Mongo Express
    depends_on:
      - mongo  # Garante que o MongoDB esteja disponível antes de iniciar o Mongo Express

volumes:
  localstack:
  mongo_data:
